#!/usr/bin/env bash

help(){
    readarray message <<"    EOF"
    Prepare next development cycle by incrementing the patch version and adding snapshot to the project version. For example
    if version 1.0.0 was just released, this script would prepare 1.0.1-SNAPSHOT.

    Usage:
        ./prepare-release [--dry-run]

        -h,--help   Show this message and exit
        --dry-run   Run without committing or pushing changes. Intermediate steps are rolled back.

    Example:
        ./prepare-release
        ./prepare-release --dry-run

    EOF
    printf '%s' "${message[@]#    }"
}

DRY_RUN=0

while [[ $# > 0 ]]
do
key="$1"

case $key in
    -h|--help)
    help
    exit 0
    ;;
    --dry-run)
    DRY_RUN=1
    shift
    ;;
    *)
    # unknown option
    ;;
esac
shift
done

mvn build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.nextIncrementalVersion}-SNAPSHOT' &> /dev/null
RELEASE=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)

if [[ $DRY_RUN -eq 0 ]]
then
    git add $(find . -name pom.xml)
    git commit -m "Setting version $RELEASE for development. [ci skip]"
    mvn versions:commit &> /dev/null
else
    readarray message <<"    EOF"
        git add $(find . -name pom.xml)
        git commit -m "Setting version $RELEASE for development. [ci skip]"
        mvn versions:commit &> /dev/null
    EOF
    printf '%s' "${message[@]#        }"
    mvn versions:revert &> /dev/null
fi

echo -e "Prepared development for $RELEASE"